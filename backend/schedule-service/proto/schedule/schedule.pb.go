// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/schedule/schedule.proto

package gurdwara_schedule_service

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type MonthInfo struct {
	Year                 int32    `protobuf:"varint,1,opt,name=Year,proto3" json:"Year,omitempty"`
	MonthNum             int32    `protobuf:"varint,2,opt,name=MonthNum,proto3" json:"MonthNum,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MonthInfo) Reset()         { *m = MonthInfo{} }
func (m *MonthInfo) String() string { return proto.CompactTextString(m) }
func (*MonthInfo) ProtoMessage()    {}
func (*MonthInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_897fc524eec70956, []int{0}
}

func (m *MonthInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MonthInfo.Unmarshal(m, b)
}
func (m *MonthInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MonthInfo.Marshal(b, m, deterministic)
}
func (m *MonthInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MonthInfo.Merge(m, src)
}
func (m *MonthInfo) XXX_Size() int {
	return xxx_messageInfo_MonthInfo.Size(m)
}
func (m *MonthInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MonthInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MonthInfo proto.InternalMessageInfo

func (m *MonthInfo) GetYear() int32 {
	if m != nil {
		return m.Year
	}
	return 0
}

func (m *MonthInfo) GetMonthNum() int32 {
	if m != nil {
		return m.MonthNum
	}
	return 0
}

type DaysInfo struct {
	StartDate            string   `protobuf:"bytes,1,opt,name=StartDate,proto3" json:"StartDate,omitempty"`
	EndDate              string   `protobuf:"bytes,2,opt,name=EndDate,proto3" json:"EndDate,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DaysInfo) Reset()         { *m = DaysInfo{} }
func (m *DaysInfo) String() string { return proto.CompactTextString(m) }
func (*DaysInfo) ProtoMessage()    {}
func (*DaysInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_897fc524eec70956, []int{1}
}

func (m *DaysInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DaysInfo.Unmarshal(m, b)
}
func (m *DaysInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DaysInfo.Marshal(b, m, deterministic)
}
func (m *DaysInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DaysInfo.Merge(m, src)
}
func (m *DaysInfo) XXX_Size() int {
	return xxx_messageInfo_DaysInfo.Size(m)
}
func (m *DaysInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_DaysInfo.DiscardUnknown(m)
}

var xxx_messageInfo_DaysInfo proto.InternalMessageInfo

func (m *DaysInfo) GetStartDate() string {
	if m != nil {
		return m.StartDate
	}
	return ""
}

func (m *DaysInfo) GetEndDate() string {
	if m != nil {
		return m.EndDate
	}
	return ""
}

type EventsInfo struct {
	StartDateTime        string   `protobuf:"bytes,1,opt,name=StartDateTime,proto3" json:"StartDateTime,omitempty"`
	EndDateTime          string   `protobuf:"bytes,2,opt,name=EndDateTime,proto3" json:"EndDateTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EventsInfo) Reset()         { *m = EventsInfo{} }
func (m *EventsInfo) String() string { return proto.CompactTextString(m) }
func (*EventsInfo) ProtoMessage()    {}
func (*EventsInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_897fc524eec70956, []int{2}
}

func (m *EventsInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventsInfo.Unmarshal(m, b)
}
func (m *EventsInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventsInfo.Marshal(b, m, deterministic)
}
func (m *EventsInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventsInfo.Merge(m, src)
}
func (m *EventsInfo) XXX_Size() int {
	return xxx_messageInfo_EventsInfo.Size(m)
}
func (m *EventsInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_EventsInfo.DiscardUnknown(m)
}

var xxx_messageInfo_EventsInfo proto.InternalMessageInfo

func (m *EventsInfo) GetStartDateTime() string {
	if m != nil {
		return m.StartDateTime
	}
	return ""
}

func (m *EventsInfo) GetEndDateTime() string {
	if m != nil {
		return m.EndDateTime
	}
	return ""
}

type Month struct {
	ID                   string   `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	MonthNum             int32    `protobuf:"varint,2,opt,name=MonthNum,proto3" json:"MonthNum,omitempty"`
	Days                 []*Day   `protobuf:"bytes,3,rep,name=Days,proto3" json:"Days,omitempty"`
	Year                 int32    `protobuf:"varint,4,opt,name=Year,proto3" json:"Year,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Month) Reset()         { *m = Month{} }
func (m *Month) String() string { return proto.CompactTextString(m) }
func (*Month) ProtoMessage()    {}
func (*Month) Descriptor() ([]byte, []int) {
	return fileDescriptor_897fc524eec70956, []int{3}
}

func (m *Month) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Month.Unmarshal(m, b)
}
func (m *Month) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Month.Marshal(b, m, deterministic)
}
func (m *Month) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Month.Merge(m, src)
}
func (m *Month) XXX_Size() int {
	return xxx_messageInfo_Month.Size(m)
}
func (m *Month) XXX_DiscardUnknown() {
	xxx_messageInfo_Month.DiscardUnknown(m)
}

var xxx_messageInfo_Month proto.InternalMessageInfo

func (m *Month) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *Month) GetMonthNum() int32 {
	if m != nil {
		return m.MonthNum
	}
	return 0
}

func (m *Month) GetDays() []*Day {
	if m != nil {
		return m.Days
	}
	return nil
}

func (m *Month) GetYear() int32 {
	if m != nil {
		return m.Year
	}
	return 0
}

type Day struct {
	ID                   string   `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Date                 string   `protobuf:"bytes,2,opt,name=Date,proto3" json:"Date,omitempty"`
	WeekdayNum           int32    `protobuf:"varint,3,opt,name=WeekdayNum,proto3" json:"WeekdayNum,omitempty"`
	Events               []*Event `protobuf:"bytes,4,rep,name=Events,proto3" json:"Events,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Day) Reset()         { *m = Day{} }
func (m *Day) String() string { return proto.CompactTextString(m) }
func (*Day) ProtoMessage()    {}
func (*Day) Descriptor() ([]byte, []int) {
	return fileDescriptor_897fc524eec70956, []int{4}
}

func (m *Day) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Day.Unmarshal(m, b)
}
func (m *Day) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Day.Marshal(b, m, deterministic)
}
func (m *Day) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Day.Merge(m, src)
}
func (m *Day) XXX_Size() int {
	return xxx_messageInfo_Day.Size(m)
}
func (m *Day) XXX_DiscardUnknown() {
	xxx_messageInfo_Day.DiscardUnknown(m)
}

var xxx_messageInfo_Day proto.InternalMessageInfo

func (m *Day) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *Day) GetDate() string {
	if m != nil {
		return m.Date
	}
	return ""
}

func (m *Day) GetWeekdayNum() int32 {
	if m != nil {
		return m.WeekdayNum
	}
	return 0
}

func (m *Day) GetEvents() []*Event {
	if m != nil {
		return m.Events
	}
	return nil
}

type Event struct {
	ID                   string   `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	StartDateTime        string   `protobuf:"bytes,2,opt,name=StartDateTime,proto3" json:"StartDateTime,omitempty"`
	EndDateTime          string   `protobuf:"bytes,3,opt,name=EndDateTime,proto3" json:"EndDateTime,omitempty"`
	Organizer            string   `protobuf:"bytes,4,opt,name=Organizer,proto3" json:"Organizer,omitempty"`
	Title                string   `protobuf:"bytes,5,opt,name=Title,proto3" json:"Title,omitempty"`
	Description          string   `protobuf:"bytes,6,opt,name=Description,proto3" json:"Description,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Event) Reset()         { *m = Event{} }
func (m *Event) String() string { return proto.CompactTextString(m) }
func (*Event) ProtoMessage()    {}
func (*Event) Descriptor() ([]byte, []int) {
	return fileDescriptor_897fc524eec70956, []int{5}
}

func (m *Event) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Event.Unmarshal(m, b)
}
func (m *Event) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Event.Marshal(b, m, deterministic)
}
func (m *Event) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Event.Merge(m, src)
}
func (m *Event) XXX_Size() int {
	return xxx_messageInfo_Event.Size(m)
}
func (m *Event) XXX_DiscardUnknown() {
	xxx_messageInfo_Event.DiscardUnknown(m)
}

var xxx_messageInfo_Event proto.InternalMessageInfo

func (m *Event) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *Event) GetStartDateTime() string {
	if m != nil {
		return m.StartDateTime
	}
	return ""
}

func (m *Event) GetEndDateTime() string {
	if m != nil {
		return m.EndDateTime
	}
	return ""
}

func (m *Event) GetOrganizer() string {
	if m != nil {
		return m.Organizer
	}
	return ""
}

func (m *Event) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Event) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func init() {
	proto.RegisterType((*MonthInfo)(nil), "gurdwara.schedule.service.MonthInfo")
	proto.RegisterType((*DaysInfo)(nil), "gurdwara.schedule.service.DaysInfo")
	proto.RegisterType((*EventsInfo)(nil), "gurdwara.schedule.service.EventsInfo")
	proto.RegisterType((*Month)(nil), "gurdwara.schedule.service.Month")
	proto.RegisterType((*Day)(nil), "gurdwara.schedule.service.Day")
	proto.RegisterType((*Event)(nil), "gurdwara.schedule.service.Event")
}

func init() { proto.RegisterFile("proto/schedule/schedule.proto", fileDescriptor_897fc524eec70956) }

var fileDescriptor_897fc524eec70956 = []byte{
	// 380 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x53, 0x4d, 0x4b, 0xeb, 0x40,
	0x14, 0x7d, 0xf9, 0xea, 0x6b, 0x6e, 0x79, 0xef, 0xc1, 0xf0, 0x16, 0xb1, 0x68, 0x09, 0xa1, 0x8b,
	0xae, 0x22, 0xd4, 0x8d, 0xe0, 0x4e, 0xa6, 0x48, 0x17, 0x2a, 0xa4, 0x01, 0x71, 0x39, 0x36, 0x63,
	0x1b, 0x6c, 0x93, 0x32, 0x99, 0x56, 0xa2, 0x4b, 0x7f, 0x93, 0xff, 0x4f, 0x72, 0x27, 0x9d, 0x56,
	0x82, 0xd5, 0xdd, 0xbd, 0xe7, 0x9e, 0x7b, 0x7a, 0xee, 0x99, 0x06, 0x4e, 0x56, 0x22, 0x97, 0xf9,
	0x69, 0x31, 0x9d, 0xf3, 0x64, 0xbd, 0xe0, 0xba, 0x08, 0x11, 0x27, 0x47, 0xb3, 0xb5, 0x48, 0x9e,
	0x99, 0x60, 0xa1, 0x1e, 0x14, 0x5c, 0x6c, 0xd2, 0x29, 0x0f, 0x2e, 0xc0, 0xbd, 0xce, 0x33, 0x39,
	0x1f, 0x67, 0x8f, 0x39, 0x21, 0x60, 0xdf, 0x73, 0x26, 0x3c, 0xc3, 0x37, 0x06, 0x4e, 0x84, 0x35,
	0xe9, 0x42, 0x1b, 0x09, 0x37, 0xeb, 0xa5, 0x67, 0x22, 0xae, 0xfb, 0xe0, 0x12, 0xda, 0x94, 0x95,
	0x05, 0xee, 0x1e, 0x83, 0x3b, 0x91, 0x4c, 0x48, 0xca, 0x24, 0x47, 0x01, 0x37, 0xda, 0x01, 0xc4,
	0x83, 0xdf, 0xa3, 0x2c, 0xc1, 0x99, 0x89, 0xb3, 0x6d, 0x1b, 0xc4, 0x00, 0xa3, 0x0d, 0xcf, 0xa4,
	0x52, 0xe9, 0xc3, 0x1f, 0xbd, 0x14, 0xa7, 0xcb, 0xad, 0xd2, 0x67, 0x90, 0xf8, 0xd0, 0xa9, 0xd7,
	0x91, 0xa3, 0x14, 0xf7, 0xa1, 0xe0, 0x15, 0x1c, 0x74, 0x49, 0xfe, 0x82, 0x39, 0xa6, 0xb5, 0x8a,
	0x39, 0xa6, 0x87, 0xce, 0x21, 0x43, 0xb0, 0xab, 0x73, 0x3c, 0xcb, 0xb7, 0x06, 0x9d, 0x61, 0x2f,
	0xfc, 0x32, 0xb5, 0x90, 0xb2, 0x32, 0x42, 0xae, 0x8e, 0xcc, 0xde, 0x45, 0x16, 0xbc, 0x19, 0x60,
	0x51, 0x56, 0x36, 0x7e, 0x9b, 0x54, 0xfa, 0x3a, 0x01, 0xac, 0x49, 0x0f, 0xe0, 0x8e, 0xf3, 0xa7,
	0x84, 0x95, 0x95, 0x23, 0x0b, 0x55, 0xf6, 0x10, 0x72, 0x0e, 0x2d, 0x15, 0x8f, 0x67, 0xa3, 0x2b,
	0xff, 0x80, 0x2b, 0x24, 0x46, 0x35, 0x3f, 0x78, 0x37, 0xc0, 0xc1, 0xb2, 0xe1, 0xa3, 0x11, 0xb2,
	0xf9, 0x83, 0x90, 0xad, 0x46, 0xc8, 0xd5, 0x93, 0xdf, 0x8a, 0x19, 0xcb, 0xd2, 0x17, 0xae, 0x02,
	0x70, 0xa3, 0x1d, 0x40, 0xfe, 0x83, 0x13, 0xa7, 0x72, 0xc1, 0x3d, 0x07, 0x27, 0xaa, 0xa9, 0x54,
	0x29, 0x2f, 0xa6, 0x22, 0x5d, 0xc9, 0x34, 0xcf, 0xbc, 0x96, 0x52, 0xdd, 0x83, 0x86, 0x33, 0xf8,
	0x37, 0xa9, 0x2f, 0x9b, 0xa8, 0xc3, 0x48, 0x0c, 0xed, 0x2b, 0x2e, 0xd5, 0x83, 0xf6, 0x0f, 0x04,
	0xa0, 0xff, 0xc9, 0x5d, 0xff, 0x3b, 0x56, 0xf0, 0xeb, 0xa1, 0x85, 0x1f, 0xc7, 0xd9, 0x47, 0x00,
	0x00, 0x00, 0xff, 0xff, 0x5e, 0x0d, 0xec, 0x05, 0x3d, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for ScheduleService service

type ScheduleServiceClient interface {
	GetMonth(ctx context.Context, in *MonthInfo, opts ...client.CallOption) (*Month, error)
}

type scheduleServiceClient struct {
	c           client.Client
	serviceName string
}

func NewScheduleServiceClient(serviceName string, c client.Client) ScheduleServiceClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "gurdwara.schedule.service"
	}
	return &scheduleServiceClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *scheduleServiceClient) GetMonth(ctx context.Context, in *MonthInfo, opts ...client.CallOption) (*Month, error) {
	req := c.c.NewRequest(c.serviceName, "ScheduleService.GetMonth", in)
	out := new(Month)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for ScheduleService service

type ScheduleServiceHandler interface {
	GetMonth(context.Context, *MonthInfo, *Month) error
}

func RegisterScheduleServiceHandler(s server.Server, hdlr ScheduleServiceHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&ScheduleService{hdlr}, opts...))
}

type ScheduleService struct {
	ScheduleServiceHandler
}

func (h *ScheduleService) GetMonth(ctx context.Context, in *MonthInfo, out *Month) error {
	return h.ScheduleServiceHandler.GetMonth(ctx, in, out)
}
